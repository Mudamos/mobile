// Top-level build file where you can add configuration options common to all sub-projects/modules.

def DEFAULT_COMPILE_SDK_VERSION = 26
// def DEFAULT_BUILD_TOOLS_VERSION = "27.0.3"
def DEFAULT_TARGET_SDK_VERSION = 23
def DEFAULT_SUPPORT_LIB_VERSION = "26.1.0"
def DEFAULT_GOOGLE_PLAY_SERVICES_VERSION = "11.8.0"
def DEFAULT_FIREBASE_VERSION = "11.8.0"
def DEFAULT_FACEBOOK_SDK_VERSION = "4.34.0"

ext {
  compileSdkVersion = DEFAULT_COMPILE_SDK_VERSION
  // Each version of the Android Gradle Plugin now has a default version of the build tools
  // buildToolsVersion = DEFAULT_BUILD_TOOLS_VERSION
  targetSdkVersion = DEFAULT_TARGET_SDK_VERSION
  supportLibVersion = DEFAULT_SUPPORT_LIB_VERSION
  googlePlayServicesVersion = DEFAULT_GOOGLE_PLAY_SERVICES_VERSION
  firebaseVersion = DEFAULT_FIREBASE_VERSION
  facebookSdkVersion = DEFAULT_FACEBOOK_SDK_VERSION
}

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.2'
        classpath 'com.google.gms:google-services:3.2.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
				// Add jitpack repository (added by react-native-spinkit)
				maven { url "https://jitpack.io" }
        mavenLocal()
        maven {
          url "https://maven.google.com"
        }
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../node_modules/react-native/android"
        }
        jcenter()

        configurations.all {
           resolutionStrategy {
             // Use this feature to force sdks versions
             // def firebaseVersion = DEFAULT_FIREBASE_VERSION
             // def googlePlayServicesVersion = DEFAULT_GOOGLE_PLAY_SERVICES_VERSION

             // force "com.google.firebase:firebase-core:$firebaseVersion"
             // force "com.google.firebase:firebase-auth:$firebaseVersion"
             // force "com.google.firebase:firebase-analytics:$firebaseVersion"
             // force "com.google.firebase:firebase-config:$firebaseVersion"
             // force "com.google.firebase:firebase-crash:$firebaseVersion"
             // force "com.google.firebase:firebase-database:$firebaseVersion"
             // force "com.google.firebase:firebase-storage:$firebaseVersion"
             // force "com.google.firebase:firebase-messaging:$firebaseVersion"

             // force "com.google.android.gms:play-services-gcm:$googlePlayServicesVersion"
             // force "com.google.android.gms:play-services-analytics:$googlePlayServicesVersion"
             // force "com.google.android.gms:play-services-location:$googlePlayServicesVersion"
           }
        }
    }
}

// In case you want to force configs on all projects
// subprojects { subproject ->
//     afterEvaluate {
//         if ((subproject.plugins.hasPlugin('android') || subproject.plugins.hasPlugin('android-library'))) {
//             android {
//                 compileSdkVersion rootProject.ext.compileSdkVersion
//                 buildToolsVersion rootProject.ext.buildToolsVersion
//             }
//         }
//     }
// }
