diff --git a/node_modules/react-native-material-kit/iOS/RCTMaterialKit/MKTouchableManager.m b/node_modules/react-native-material-kit/iOS/RCTMaterialKit/MKTouchableManager.m
index 146813d..7677c56 100644
--- a/node_modules/react-native-material-kit/iOS/RCTMaterialKit/MKTouchableManager.m
+++ b/node_modules/react-native-material-kit/iOS/RCTMaterialKit/MKTouchableManager.m
@@ -8,7 +8,7 @@
 
 #import <React/RCTViewManager.h>
 #import <React/RCTEventDispatcher.h>
-#import <UIView+React.h>
+#import <React/UIView+React.h>
 #import "MKTouchable.h"
 
 @interface MKTouchableManager : RCTViewManager <MKTouchableDelegate>
@@ -56,7 +56,7 @@ - (void)sendTouchEvent:(NSString*)type touch:(UITouch*)touch source:(MKTouchable
                            @"x": [NSNumber numberWithFloat:location.x],
                            @"y": [NSNumber numberWithFloat:location.y],
                            };
-    [self.bridge.eventDispatcher sendInputEventWithName:@"topChange" body:dict];
+    [self.bridge enqueueJSCall:@"RCTEventEmitter" method:@"receiveEvent" args:@[dict[@"target"], RCTNormalizeInputEventName(@"topChange"), dict] completion:NULL];
 }
 
 @end
diff --git a/node_modules/react-native-material-kit/iOS/RCTMaterialKit/TickViewManager.m b/node_modules/react-native-material-kit/iOS/RCTMaterialKit/TickViewManager.m
index abaaba7..e4bcdb7 100644
--- a/node_modules/react-native-material-kit/iOS/RCTMaterialKit/TickViewManager.m
+++ b/node_modules/react-native-material-kit/iOS/RCTMaterialKit/TickViewManager.m
@@ -7,7 +7,7 @@
 //
 
 #import <React/RCTViewManager.h>
-#import <UIView+React.h>
+#import <React/UIView+React.h>
 #import "TickView.h"
 
 @interface TickViewManager : RCTViewManager
diff --git a/node_modules/react-native-material-kit/lib/TouchableWithoutFeedback.js b/node_modules/react-native-material-kit/lib/TouchableWithoutFeedback.js
new file mode 100644
index 0000000..56b57ab
--- /dev/null
+++ b/node_modules/react-native-material-kit/lib/TouchableWithoutFeedback.js
@@ -0,0 +1,48 @@
+import PropTypes from 'prop-types';
+import { TouchableWithoutFeedback } from 'react-native';
+
+class MKTouchableWithoutFeedback extends TouchableWithoutFeedback {
+};
+
+MKTouchableWithoutFeedback.propTypes = {
+    accessible: PropTypes.bool,
+    accessibilityLabel: PropTypes.node,
+    accessibilityHint: PropTypes.string,
+    accessibilityIgnoresInvertColors: PropTypes.bool,
+    accessibilityRole: PropTypes.any,
+    accessibilityState: PropTypes.object,
+    accessibilityActions: PropTypes.array,
+    onAccessibilityAction: PropTypes.func,
+    accessibilityValue: PropTypes.object,
+    accessibilityLiveRegion: PropTypes.oneOf([
+      'none',
+      'polite',
+      'assertive',
+    ]),
+    importantForAccessibility: PropTypes.oneOf([
+      'auto',
+      'yes',
+      'no',
+      'no-hide-descendants',
+    ]),
+    accessibilityViewIsModal: PropTypes.bool,
+    accessibilityElementsHidden: PropTypes.bool,
+    onFocus: PropTypes.func,
+    onBlur: PropTypes.func,
+    disabled: PropTypes.bool,
+    onPress: PropTypes.func,
+    onPressIn: PropTypes.func,
+    onPressOut: PropTypes.func,
+    onLayout: PropTypes.func,
+    touchSoundDisabled: PropTypes.bool,
+    onLongPress: PropTypes.func,
+    nativeID: PropTypes.string,
+    testID: PropTypes.string,
+    delayPressIn: PropTypes.number,
+    delayPressOut: PropTypes.number,
+    delayLongPress: PropTypes.number,
+    pressRetentionOffset: PropTypes.any,
+    hitSlop: PropTypes.any,
+  };
+
+export default MKTouchableWithoutFeedback;
diff --git a/node_modules/react-native-material-kit/lib/internal/Thumb.js b/node_modules/react-native-material-kit/lib/internal/Thumb.js
index 9a1f47f..2b5dbd9 100644
--- a/node_modules/react-native-material-kit/lib/internal/Thumb.js
+++ b/node_modules/react-native-material-kit/lib/internal/Thumb.js
@@ -53,7 +53,7 @@ class Thumb extends Component {
     };
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this._panResponder = PanResponder.create({
       onStartShouldSetPanResponder: () => true,
       onStartShouldSetPanResponderCapture: () => true,
@@ -78,7 +78,7 @@ class Thumb extends Component {
     this._animatedLeft.addListener(this._getOnSliding());
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     this._onRadiiUpdate(nextProps);
   }
 
diff --git a/node_modules/react-native-material-kit/lib/mdl/Button.js b/node_modules/react-native-material-kit/lib/mdl/Button.js
index 735221f..832855a 100644
--- a/node_modules/react-native-material-kit/lib/mdl/Button.js
+++ b/node_modules/react-native-material-kit/lib/mdl/Button.js
@@ -14,8 +14,8 @@ import React, {
 } from 'react';
 import PropTypes from 'prop-types';
 
+import TouchableWithoutFeedback from '../TouchableWithoutFeedback';
 import {
-  TouchableWithoutFeedback,
   Text,
 } from 'react-native';
 
diff --git a/node_modules/react-native-material-kit/lib/mdl/Checkbox.js b/node_modules/react-native-material-kit/lib/mdl/Checkbox.js
index 772f3d5..883a169 100644
--- a/node_modules/react-native-material-kit/lib/mdl/Checkbox.js
+++ b/node_modules/react-native-material-kit/lib/mdl/Checkbox.js
@@ -13,9 +13,9 @@ import React, {
 } from 'react';
 import PropTypes from 'prop-types';
 
+import TouchableWithoutFeedback from '../TouchableWithoutFeedback';
 import {
   Animated,
-  TouchableWithoutFeedback,
   View,
 } from 'react-native';
 
@@ -93,11 +93,11 @@ class Checkbox extends Component {
     };
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this._initView(this.props.checked);
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     if (nextProps.checked !== this.props.checked) {
       this._initView(nextProps.checked);
     }
diff --git a/node_modules/react-native-material-kit/lib/mdl/IconToggle.js b/node_modules/react-native-material-kit/lib/mdl/IconToggle.js
index bbda855..f6d5df1 100644
--- a/node_modules/react-native-material-kit/lib/mdl/IconToggle.js
+++ b/node_modules/react-native-material-kit/lib/mdl/IconToggle.js
@@ -14,9 +14,7 @@ import React, {
 } from 'react';
 import PropTypes from 'prop-types';
 
-import {
-  TouchableWithoutFeedback,
-} from 'react-native';
+import TouchableWithoutFeedback from '../TouchableWithoutFeedback';
 
 import MKColor from '../MKColor';
 import Ripple from './Ripple';
@@ -69,11 +67,11 @@ class IconToggle extends Component {
     this.state = { checked: false };
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this.setState({ checked: this.props.checked });
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     if (nextProps.checked !== this.props.checked) {
       this.setState({ checked: nextProps.checked });
     }
diff --git a/node_modules/react-native-material-kit/lib/mdl/Progress.js b/node_modules/react-native-material-kit/lib/mdl/Progress.js
index aacef0e..bb1eb52 100644
--- a/node_modules/react-native-material-kit/lib/mdl/Progress.js
+++ b/node_modules/react-native-material-kit/lib/mdl/Progress.js
@@ -70,12 +70,12 @@ class Progress extends Component {
     this._animatedBufferLength = new Animated.Value(0);
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this.progress = this.props.progress;
     this.buffer = this.props.buffer;
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     this.progress = nextProps.progress;
     this.buffer = nextProps.buffer;
   }
diff --git a/node_modules/react-native-material-kit/lib/mdl/RadioButton.js b/node_modules/react-native-material-kit/lib/mdl/RadioButton.js
index 171bfc1..d71781e 100644
--- a/node_modules/react-native-material-kit/lib/mdl/RadioButton.js
+++ b/node_modules/react-native-material-kit/lib/mdl/RadioButton.js
@@ -13,9 +13,9 @@ import React, {
 } from 'react';
 import PropTypes from 'prop-types';
 
+import TouchableWithoutFeedback from '../TouchableWithoutFeedback';
 import {
   Animated,
-  TouchableWithoutFeedback,
   View,
 } from 'react-native';
 
@@ -88,7 +88,7 @@ class RadioButton extends Component {
     };
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this.group = this.props.group;
     this._initView(this.props.checked);
 
@@ -96,7 +96,7 @@ class RadioButton extends Component {
       this.group.add(this);
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     if (this.group !== nextProps.group) {
       if (this.group && this.group.remove instanceof Function)
         this.group.remove(this);
diff --git a/node_modules/react-native-material-kit/lib/mdl/RangeSlider.js b/node_modules/react-native-material-kit/lib/mdl/RangeSlider.js
index 1b283d8..d226791 100644
--- a/node_modules/react-native-material-kit/lib/mdl/RangeSlider.js
+++ b/node_modules/react-native-material-kit/lib/mdl/RangeSlider.js
@@ -47,11 +47,11 @@ class RangeSlider extends Component {
     this._lowerTrackMin = new Animated.Value(this._range.min);
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this._onThumbRadiiUpdate(this.props);
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     this._onThumbRadiiUpdate(nextProps);
     this._setRange({ min: nextProps.minValue, max: nextProps.maxValue });
     this._updateValue(this._range);
diff --git a/node_modules/react-native-material-kit/lib/mdl/Slider.js b/node_modules/react-native-material-kit/lib/mdl/Slider.js
index af4d466..1e8c5a1 100644
--- a/node_modules/react-native-material-kit/lib/mdl/Slider.js
+++ b/node_modules/react-native-material-kit/lib/mdl/Slider.js
@@ -129,12 +129,12 @@ class Slider extends Component {
     });
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this._onThumbRadiiUpdate(this.props);
     this._internalSetValue(this.props.value, false);
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     this._onThumbRadiiUpdate(nextProps);
     this._internalSetValue(nextProps.value, false);
     this._aniUpdateValue(nextProps.value);
diff --git a/node_modules/react-native-material-kit/lib/mdl/Switch.js b/node_modules/react-native-material-kit/lib/mdl/Switch.js
index 2df5ee2..9fe9227 100644
--- a/node_modules/react-native-material-kit/lib/mdl/Switch.js
+++ b/node_modules/react-native-material-kit/lib/mdl/Switch.js
@@ -16,9 +16,9 @@ import React, {
 } from 'react';
 import PropTypes from 'prop-types';
 
+import TouchableWithoutFeedback from '../TouchableWithoutFeedback';
 import {
   Animated,
-  TouchableWithoutFeedback,
   View
 } from 'react-native';
 
@@ -63,11 +63,11 @@ class Thumb extends Component {
     };
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this.setState({ checked: this.props.checked });
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     if (nextProps.checked !== this.props.checked) {
       this.setState({ checked: nextProps.checked });
     }
@@ -205,7 +205,7 @@ class Switch extends Component {
     };
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     const nextState = this._layoutThumb(this.props.checked,
       this.props.thumbRadius,
       this.props.trackLength,
@@ -213,7 +213,7 @@ class Switch extends Component {
     this.setState(Object.assign(nextState, { checked: this.props.checked }));
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     const nextState = this._layoutThumb(nextProps.checked,
       nextProps.thumbRadius,
       nextProps.trackLength,
diff --git a/node_modules/react-native-material-kit/lib/mdl/Textfield.js b/node_modules/react-native-material-kit/lib/mdl/Textfield.js
index 7df6423..49dd235 100644
--- a/node_modules/react-native-material-kit/lib/mdl/Textfield.js
+++ b/node_modules/react-native-material-kit/lib/mdl/Textfield.js
@@ -48,11 +48,11 @@ class FloatingLabel extends Component {
     };
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this.updateText(this.props.text);
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     this.updateText(nextProps.text);
   }
 
@@ -356,13 +356,13 @@ class Textfield extends Component {
     }
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this.bufferedValue = this.props.value || this.props.text ||
     this.props.defaultValue;
     this._originPlaceholder = this.props.placeholder;
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     const newText = nextProps.value || nextProps.text || nextProps.defaultValue;
     if (newText) {
       this.bufferedValue = newText;
diff --git a/node_modules/react-native-material-kit/lib/utils.js b/node_modules/react-native-material-kit/lib/utils.js
index 60fc657..af78d39 100644
--- a/node_modules/react-native-material-kit/lib/utils.js
+++ b/node_modules/react-native-material-kit/lib/utils.js
@@ -3,9 +3,9 @@
 // Created by ywu on 15/7/18.
 //
 
+import TouchableWithoutFeedback from './TouchableWithoutFeedback';
 import {
   PixelRatio,
-  TouchableWithoutFeedback,
   Platform,
   processColor,
   View,
