diff --git a/node_modules/react-native-material-kit/iOS/RCTMaterialKit/MKTouchableManager.m b/node_modules/react-native-material-kit/iOS/RCTMaterialKit/MKTouchableManager.m
index 146813d..7677c56 100644
--- a/node_modules/react-native-material-kit/iOS/RCTMaterialKit/MKTouchableManager.m
+++ b/node_modules/react-native-material-kit/iOS/RCTMaterialKit/MKTouchableManager.m
@@ -8,7 +8,7 @@
 
 #import <React/RCTViewManager.h>
 #import <React/RCTEventDispatcher.h>
-#import <UIView+React.h>
+#import <React/UIView+React.h>
 #import "MKTouchable.h"
 
 @interface MKTouchableManager : RCTViewManager <MKTouchableDelegate>
@@ -56,7 +56,7 @@ - (void)sendTouchEvent:(NSString*)type touch:(UITouch*)touch source:(MKTouchable
                            @"x": [NSNumber numberWithFloat:location.x],
                            @"y": [NSNumber numberWithFloat:location.y],
                            };
-    [self.bridge.eventDispatcher sendInputEventWithName:@"topChange" body:dict];
+    [self.bridge enqueueJSCall:@"RCTEventEmitter" method:@"receiveEvent" args:@[dict[@"target"], RCTNormalizeInputEventName(@"topChange"), dict] completion:NULL];
 }
 
 @end
diff --git a/node_modules/react-native-material-kit/iOS/RCTMaterialKit/TickViewManager.m b/node_modules/react-native-material-kit/iOS/RCTMaterialKit/TickViewManager.m
index abaaba7..e4bcdb7 100644
--- a/node_modules/react-native-material-kit/iOS/RCTMaterialKit/TickViewManager.m
+++ b/node_modules/react-native-material-kit/iOS/RCTMaterialKit/TickViewManager.m
@@ -7,7 +7,7 @@
 //
 
 #import <React/RCTViewManager.h>
-#import <UIView+React.h>
+#import <React/UIView+React.h>
 #import "TickView.h"
 
 @interface TickViewManager : RCTViewManager
diff --git a/node_modules/react-native-material-kit/lib/TouchableWithoutFeedback.js b/node_modules/react-native-material-kit/lib/TouchableWithoutFeedback.js
new file mode 100644
index 0000000..56b57ab
--- /dev/null
+++ b/node_modules/react-native-material-kit/lib/TouchableWithoutFeedback.js
@@ -0,0 +1,48 @@
+import PropTypes from 'prop-types';
+import { TouchableWithoutFeedback } from 'react-native';
+
+class MKTouchableWithoutFeedback extends TouchableWithoutFeedback {
+};
+
+MKTouchableWithoutFeedback.propTypes = {
+    accessible: PropTypes.bool,
+    accessibilityLabel: PropTypes.node,
+    accessibilityHint: PropTypes.string,
+    accessibilityIgnoresInvertColors: PropTypes.bool,
+    accessibilityRole: PropTypes.any,
+    accessibilityState: PropTypes.object,
+    accessibilityActions: PropTypes.array,
+    onAccessibilityAction: PropTypes.func,
+    accessibilityValue: PropTypes.object,
+    accessibilityLiveRegion: PropTypes.oneOf([
+      'none',
+      'polite',
+      'assertive',
+    ]),
+    importantForAccessibility: PropTypes.oneOf([
+      'auto',
+      'yes',
+      'no',
+      'no-hide-descendants',
+    ]),
+    accessibilityViewIsModal: PropTypes.bool,
+    accessibilityElementsHidden: PropTypes.bool,
+    onFocus: PropTypes.func,
+    onBlur: PropTypes.func,
+    disabled: PropTypes.bool,
+    onPress: PropTypes.func,
+    onPressIn: PropTypes.func,
+    onPressOut: PropTypes.func,
+    onLayout: PropTypes.func,
+    touchSoundDisabled: PropTypes.bool,
+    onLongPress: PropTypes.func,
+    nativeID: PropTypes.string,
+    testID: PropTypes.string,
+    delayPressIn: PropTypes.number,
+    delayPressOut: PropTypes.number,
+    delayLongPress: PropTypes.number,
+    pressRetentionOffset: PropTypes.any,
+    hitSlop: PropTypes.any,
+  };
+
+export default MKTouchableWithoutFeedback;
diff --git a/node_modules/react-native-material-kit/lib/internal/Thumb.js b/node_modules/react-native-material-kit/lib/internal/Thumb.js
index 9a1f47f..2b5dbd9 100644
--- a/node_modules/react-native-material-kit/lib/internal/Thumb.js
+++ b/node_modules/react-native-material-kit/lib/internal/Thumb.js
@@ -53,7 +53,7 @@ class Thumb extends Component {
     };
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this._panResponder = PanResponder.create({
       onStartShouldSetPanResponder: () => true,
       onStartShouldSetPanResponderCapture: () => true,
@@ -78,7 +78,7 @@ class Thumb extends Component {
     this._animatedLeft.addListener(this._getOnSliding());
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     this._onRadiiUpdate(nextProps);
   }
 
diff --git a/node_modules/react-native-material-kit/lib/mdl/.Spinner.ios.js.swp b/node_modules/react-native-material-kit/lib/mdl/.Spinner.ios.js.swp
new file mode 100644
index 0000000..2fc7335
Binary files /dev/null and b/node_modules/react-native-material-kit/lib/mdl/.Spinner.ios.js.swp differ
diff --git a/node_modules/react-native-material-kit/lib/mdl/Button.js b/node_modules/react-native-material-kit/lib/mdl/Button.js
index 735221f..832855a 100644
--- a/node_modules/react-native-material-kit/lib/mdl/Button.js
+++ b/node_modules/react-native-material-kit/lib/mdl/Button.js
@@ -14,8 +14,8 @@ import React, {
 } from 'react';
 import PropTypes from 'prop-types';
 
+import TouchableWithoutFeedback from '../TouchableWithoutFeedback';
 import {
-  TouchableWithoutFeedback,
   Text,
 } from 'react-native';
 
diff --git a/node_modules/react-native-material-kit/lib/mdl/Checkbox.js b/node_modules/react-native-material-kit/lib/mdl/Checkbox.js
index 772f3d5..183344d 100644
--- a/node_modules/react-native-material-kit/lib/mdl/Checkbox.js
+++ b/node_modules/react-native-material-kit/lib/mdl/Checkbox.js
@@ -13,9 +13,9 @@ import React, {
 } from 'react';
 import PropTypes from 'prop-types';
 
+import TouchableWithoutFeedback from '../TouchableWithoutFeedback';
 import {
   Animated,
-  TouchableWithoutFeedback,
   View,
 } from 'react-native';
 
@@ -93,11 +93,11 @@ class Checkbox extends Component {
     };
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this._initView(this.props.checked);
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     if (nextProps.checked !== this.props.checked) {
       this._initView(nextProps.checked);
     }
@@ -151,6 +151,7 @@ class Checkbox extends Component {
     Animated.timing(this._animatedTickAlpha, {
       toValue: checked ? 1 : 0,
       duration: 220,
+      useNativeDriver: false,
     }).start();
   }
 
diff --git a/node_modules/react-native-material-kit/lib/mdl/IconToggle.js b/node_modules/react-native-material-kit/lib/mdl/IconToggle.js
index bbda855..f6d5df1 100644
--- a/node_modules/react-native-material-kit/lib/mdl/IconToggle.js
+++ b/node_modules/react-native-material-kit/lib/mdl/IconToggle.js
@@ -14,9 +14,7 @@ import React, {
 } from 'react';
 import PropTypes from 'prop-types';
 
-import {
-  TouchableWithoutFeedback,
-} from 'react-native';
+import TouchableWithoutFeedback from '../TouchableWithoutFeedback';
 
 import MKColor from '../MKColor';
 import Ripple from './Ripple';
@@ -69,11 +67,11 @@ class IconToggle extends Component {
     this.state = { checked: false };
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this.setState({ checked: this.props.checked });
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     if (nextProps.checked !== this.props.checked) {
       this.setState({ checked: nextProps.checked });
     }
diff --git a/node_modules/react-native-material-kit/lib/mdl/IndeterminateProgress.js b/node_modules/react-native-material-kit/lib/mdl/IndeterminateProgress.js
index 5286a8f..3e181a9 100644
--- a/node_modules/react-native-material-kit/lib/mdl/IndeterminateProgress.js
+++ b/node_modules/react-native-material-kit/lib/mdl/IndeterminateProgress.js
@@ -86,10 +86,12 @@ class IndeterminateProgress extends Component {
         Animated.timing(this._animatedBlock1.left, {
           toValue: this._totalLength * 0.25,
           duration: this.props.progressAniDuration || 1250,
+          useNativeDriver: false,
         }),
         Animated.timing(this._animatedBlock1.right, {
           toValue: 0,
           duration: this.props.progressAniDuration || 1250,
+          useNativeDriver: false,
         }),
       ]),
       Animated.parallel([
@@ -97,6 +99,7 @@ class IndeterminateProgress extends Component {
           toValue: this._totalLength,
           duration: this.props.progressAniDuration || 500,
           easing: Easing.out(Easing.quad),
+          useNativeDriver: false,
         }),
         this._getBlock2Ani(),
       ]),
@@ -111,17 +114,20 @@ class IndeterminateProgress extends Component {
       Animated.timing(this._animatedBlock2.right, {
         toValue: this._totalLength * 0.75,
         duration: this.props.progressAniDuration || 500,
+        useNativeDriver: false,
       }),
       Animated.parallel([
         Animated.timing(this._animatedBlock2.left, {
           toValue: this._totalLength,
           duration: this.props.progressAniDuration || 705,
           easing: Easing.out(Easing.quad),
+          useNativeDriver: false,
         }),
         Animated.timing(this._animatedBlock2.right, {
           toValue: 0,
           duration: this.props.progressAniDuration || 700,
           easing: Easing.out(Easing.quad),
+          useNativeDriver: false,
         }),
       ]),
     ]);
diff --git a/node_modules/react-native-material-kit/lib/mdl/Progress.js b/node_modules/react-native-material-kit/lib/mdl/Progress.js
index aacef0e..8fe7644 100644
--- a/node_modules/react-native-material-kit/lib/mdl/Progress.js
+++ b/node_modules/react-native-material-kit/lib/mdl/Progress.js
@@ -70,12 +70,12 @@ class Progress extends Component {
     this._animatedBufferLength = new Animated.Value(0);
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this.progress = this.props.progress;
     this.buffer = this.props.buffer;
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     this.progress = nextProps.progress;
     this.buffer = nextProps.buffer;
   }
@@ -100,6 +100,7 @@ class Progress extends Component {
       toValue: theProgress * this._totalLength,
       duration: this.props.progressAniDuration || 300,
       easing: Easing.out(Easing.quad),
+      useNativeDriver: false,
     }).start();
   }
 
@@ -111,6 +112,7 @@ class Progress extends Component {
     Animated.timing(this._animatedBufferLength, {
       toValue: buffer * this._totalLength,
       duration: this.props.bufferAniDuration || 200,
+      useNativeDriver: false,
     }).start();
   }
 
diff --git a/node_modules/react-native-material-kit/lib/mdl/RadioButton.js b/node_modules/react-native-material-kit/lib/mdl/RadioButton.js
index 171bfc1..feb3a07 100644
--- a/node_modules/react-native-material-kit/lib/mdl/RadioButton.js
+++ b/node_modules/react-native-material-kit/lib/mdl/RadioButton.js
@@ -13,9 +13,9 @@ import React, {
 } from 'react';
 import PropTypes from 'prop-types';
 
+import TouchableWithoutFeedback from '../TouchableWithoutFeedback';
 import {
   Animated,
-  TouchableWithoutFeedback,
   View,
 } from 'react-native';
 
@@ -88,7 +88,7 @@ class RadioButton extends Component {
     };
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this.group = this.props.group;
     this._initView(this.props.checked);
 
@@ -96,7 +96,7 @@ class RadioButton extends Component {
       this.group.add(this);
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     if (this.group !== nextProps.group) {
       if (this.group && this.group.remove instanceof Function)
         this.group.remove(this);
@@ -182,10 +182,12 @@ class RadioButton extends Component {
       Animated.timing(this._animatedRadius, {
         toValue: checked ? 5 : 0,
         duration: 220,
+        useNativeDriver: false,
       }),
       Animated.timing(this._animatedSize, {
         toValue: checked ? 10 : 0,
         duration: 220,
+        useNativeDriver: false,
       }),
     ]).start();
   }
diff --git a/node_modules/react-native-material-kit/lib/mdl/RangeSlider.js b/node_modules/react-native-material-kit/lib/mdl/RangeSlider.js
index 1b283d8..529402f 100644
--- a/node_modules/react-native-material-kit/lib/mdl/RangeSlider.js
+++ b/node_modules/react-native-material-kit/lib/mdl/RangeSlider.js
@@ -47,11 +47,11 @@ class RangeSlider extends Component {
     this._lowerTrackMin = new Animated.Value(this._range.min);
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this._onThumbRadiiUpdate(this.props);
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     this._onThumbRadiiUpdate(nextProps);
     this._setRange({ min: nextProps.minValue, max: nextProps.maxValue });
     this._updateValue(this._range);
@@ -246,10 +246,12 @@ class RangeSlider extends Component {
       Animated.timing(this._lowerTrackMin, {
         toValue: this._range.min,
         duration: 0,
+        useNativeDriver: false,
       }),
       Animated.timing(this._lowerTrackLength, {
         toValue: this._range.max - this._range.min,
         duration: 0,
+        useNativeDriver: false,
       }),
     ]).start();
   }
diff --git a/node_modules/react-native-material-kit/lib/mdl/Slider.js b/node_modules/react-native-material-kit/lib/mdl/Slider.js
index af4d466..6f37c6d 100644
--- a/node_modules/react-native-material-kit/lib/mdl/Slider.js
+++ b/node_modules/react-native-material-kit/lib/mdl/Slider.js
@@ -129,12 +129,12 @@ class Slider extends Component {
     });
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this._onThumbRadiiUpdate(this.props);
     this._internalSetValue(this.props.value, false);
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     this._onThumbRadiiUpdate(nextProps);
     this._internalSetValue(nextProps.value, false);
     this._aniUpdateValue(nextProps.value);
@@ -290,6 +290,7 @@ class Slider extends Component {
     Animated.timing(this._animatedTrackLength, {
       toValue: x,
       duration: 0,
+      useNativeDriver: false,
     }).start();
   }
 
diff --git a/node_modules/react-native-material-kit/lib/mdl/Spinner.ios.js b/node_modules/react-native-material-kit/lib/mdl/Spinner.ios.js
index 657ebf1..4ebf034 100644
--- a/node_modules/react-native-material-kit/lib/mdl/Spinner.ios.js
+++ b/node_modules/react-native-material-kit/lib/mdl/Spinner.ios.js
@@ -121,10 +121,12 @@ class Spinner extends Component {
         Animated.timing(this._animatedContainerAngle, {
           duration,
           toValue: 1,
+          useNativeDriver: false,
         }),
         Animated.timing(this._animatedArcAngle, {
           duration,
           toValue: 1,
+          useNativeDriver: false,
         }),
       ]).start(({ finished }) => finished && setImmediate(this._aniUpdateSpinner));
     });
diff --git a/node_modules/react-native-material-kit/lib/mdl/Switch.js b/node_modules/react-native-material-kit/lib/mdl/Switch.js
index 2df5ee2..b51f1f0 100644
--- a/node_modules/react-native-material-kit/lib/mdl/Switch.js
+++ b/node_modules/react-native-material-kit/lib/mdl/Switch.js
@@ -16,9 +16,9 @@ import React, {
 } from 'react';
 import PropTypes from 'prop-types';
 
+import TouchableWithoutFeedback from '../TouchableWithoutFeedback';
 import {
   Animated,
-  TouchableWithoutFeedback,
   View
 } from 'react-native';
 
@@ -63,11 +63,11 @@ class Thumb extends Component {
     };
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this.setState({ checked: this.props.checked });
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     if (nextProps.checked !== this.props.checked) {
       this.setState({ checked: nextProps.checked });
     }
@@ -100,10 +100,12 @@ class Thumb extends Component {
       Animated.timing(this._animatedRippleAlpha, {
         toValue: 1,
         duration: this.props.rippleAniDuration || 250,
+        useNativeDriver: false,
       }),
       Animated.timing(this._animatedRippleScale, {
         toValue: 1,
         duration: this.props.rippleAniDuration || 250,
+        useNativeDriver: false,
       }),
     ]);
 
@@ -124,10 +126,12 @@ class Thumb extends Component {
         Animated.timing(this._animatedRippleScale, {
           toValue: 0,
           duration: this.props.rippleAniDuration || 250,
+          useNativeDriver: false,
         }),
         Animated.timing(this._animatedRippleAlpha, {
           toValue: 0,
           duration: this.props.rippleAniDuration || 250,
+          useNativeDriver: false,
         }),
       ]).start();
 
@@ -205,7 +209,7 @@ class Switch extends Component {
     };
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     const nextState = this._layoutThumb(this.props.checked,
       this.props.thumbRadius,
       this.props.trackLength,
@@ -213,7 +217,7 @@ class Switch extends Component {
     this.setState(Object.assign(nextState, { checked: this.props.checked }));
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     const nextState = this._layoutThumb(nextProps.checked,
       nextProps.thumbRadius,
       nextProps.trackLength,
@@ -283,6 +287,7 @@ class Switch extends Component {
     Animated.timing(this._animatedThumbLeft, {
       toValue: newX,
       duration: this.props.thumbAniDuration || 300,
+      useNativeDriver: false,
     }).start(() => {
       this.state.thumbFrame.x = newX;
     });
diff --git a/node_modules/react-native-material-kit/lib/mdl/Textfield.js b/node_modules/react-native-material-kit/lib/mdl/Textfield.js
index 7df6423..952bc26 100644
--- a/node_modules/react-native-material-kit/lib/mdl/Textfield.js
+++ b/node_modules/react-native-material-kit/lib/mdl/Textfield.js
@@ -48,11 +48,11 @@ class FloatingLabel extends Component {
     };
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this.updateText(this.props.text);
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     this.updateText(nextProps.text);
   }
 
@@ -95,10 +95,12 @@ class FloatingLabel extends Component {
       Animated.timing(this.state.opacity, {
         toValue: 1,
         duration: this.props.opacityAniDur,
+        useNativeDriver: false,
       }),
       Animated.timing(this.state.progress, {
         toValue: 0,
         duration: this.props.floatingLabelAniDuration,
+        useNativeDriver: false,
       }),
     ])];
   }
@@ -112,10 +114,12 @@ class FloatingLabel extends Component {
       Animated.timing(this.state.progress, {
         toValue: 1,
         duration: this.props.floatingLabelAniDuration,
+        useNativeDriver: false,
       }),
       Animated.timing(this.state.opacity, {
         toValue: 0,
         duration: this.props.opacityAniDur,
+        useNativeDriver: false,
       }),
     ])];
   }
@@ -234,10 +238,12 @@ class Underline extends Component {
       Animated.timing(this.animatedLeft, {
         toValue: 0,
         duration: this.props.underlineAniDur,
+        useNativeDriver: false,
       }),
       Animated.timing(this.animatedLineLength, {
         toValue: this.state.lineLength,
         duration: this.props.underlineAniDur,
+        useNativeDriver: false,
       }),
     ];
   }
@@ -252,10 +258,12 @@ class Underline extends Component {
       Animated.timing(this.animatedLeft, {
         toValue: this.state.lineLength / 2,
         duration: this.props.underlineAniDur,
+        useNativeDriver: false,
       }),
       Animated.timing(this.animatedLineLength, {
         toValue: 0,
         duration: this.props.underlineAniDur,
+        useNativeDriver: false,
       }),
     ];
   }
@@ -356,13 +364,13 @@ class Textfield extends Component {
     }
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this.bufferedValue = this.props.value || this.props.text ||
     this.props.defaultValue;
     this._originPlaceholder = this.props.placeholder;
   }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     const newText = nextProps.value || nextProps.text || nextProps.defaultValue;
     if (newText) {
       this.bufferedValue = newText;
@@ -399,7 +407,7 @@ class Textfield extends Component {
       this.anim.stop();
     }
 
-    this.anim = Animated.parallel(animations).start(cb);
+    this.anim = Animated.parallel(animations, { useNativeDriver: false }).start(cb);
   }
 
   _doMeasurement() {
diff --git a/node_modules/react-native-material-kit/lib/utils.js b/node_modules/react-native-material-kit/lib/utils.js
index 60fc657..af78d39 100644
--- a/node_modules/react-native-material-kit/lib/utils.js
+++ b/node_modules/react-native-material-kit/lib/utils.js
@@ -3,9 +3,9 @@
 // Created by ywu on 15/7/18.
 //
 
+import TouchableWithoutFeedback from './TouchableWithoutFeedback';
 import {
   PixelRatio,
-  TouchableWithoutFeedback,
   Platform,
   processColor,
   View,
