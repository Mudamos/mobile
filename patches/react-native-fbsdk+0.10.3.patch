diff --git a/node_modules/react-native-fbsdk/ios/RCTFBSDK/login/RCTFBSDKLoginButtonManager.m b/node_modules/react-native-fbsdk/ios/RCTFBSDK/login/RCTFBSDKLoginButtonManager.m
index ca865b0..9d0cf5b 100644
--- a/node_modules/react-native-fbsdk/ios/RCTFBSDK/login/RCTFBSDKLoginButtonManager.m
+++ b/node_modules/react-native-fbsdk/ios/RCTFBSDK/login/RCTFBSDKLoginButtonManager.m
@@ -19,6 +19,7 @@
 #import "RCTFBSDKLoginButtonManager.h"
 
 #import <React/RCTBridge.h>
+#import <React/RCTComponentEvent.h>
 #import <React/RCTEventDispatcher.h>
 #import <React/RCTUtils.h>
 #import <React/UIView+React.h>
@@ -42,11 +43,6 @@ - (UIView *)view
 
 RCT_EXPORT_VIEW_PROPERTY(permissions, NSStringArray)
 
-RCT_CUSTOM_VIEW_PROPERTY(loginBehaviorIOS, FBSDKLoginBehavior, FBSDKLoginButton)
-{
-  [view setLoginBehavior:json ? [RCTConvert FBSDKLoginBehavior:json] : FBSDKLoginBehaviorBrowser];
-}
-
 RCT_EXPORT_VIEW_PROPERTY(defaultAudience, FBSDKDefaultAudience)
 
 RCT_CUSTOM_VIEW_PROPERTY(tooltipBehaviorIOS, FBSDKLoginButtonTooltipBehavior, FBSDKLoginButton)
@@ -58,9 +54,8 @@ - (UIView *)view
 
 - (void)loginButton:(FBSDKLoginButton *)loginButton didCompleteWithResult:(FBSDKLoginManagerLoginResult *)result error:(NSError *)error
 {
-  NSDictionary *event = @{
+  NSDictionary *body = @{
     @"type": @"loginFinished",
-    @"target": loginButton.reactTag,
     @"error": error ? RCTJSErrorFromNSError(error) : [NSNull null],
     @"result": error ? [NSNull null] : @{
       @"isCancelled": @(result.isCancelled),
@@ -68,16 +63,23 @@ - (void)loginButton:(FBSDKLoginButton *)loginButton didCompleteWithResult:(FBSDK
       @"declinedPermissions": result.isCancelled ? [NSNull null] : result.declinedPermissions.allObjects,
     },
   };
-  [self.bridge.eventDispatcher sendInputEventWithName:@"topChange" body:event];
+
+  RCTComponentEvent *event = [[RCTComponentEvent alloc] initWithName:@"topChange"
+                                                             viewTag:loginButton.reactTag
+                                                                body:body];
+  [self.bridge.eventDispatcher sendEvent:event];
 }
 
 - (void)loginButtonDidLogOut:(FBSDKLoginButton *)loginButton
 {
-  NSDictionary *event = @{
-    @"target": loginButton.reactTag,
+  NSDictionary *body = @{
     @"type": @"logoutFinished",
   };
-  [self.bridge.eventDispatcher sendInputEventWithName:@"topChange" body:event];
+
+  RCTComponentEvent *event = [[RCTComponentEvent alloc] initWithName:@"topChange"
+                                                             viewTag:loginButton.reactTag
+                                                                body:body];
+  [self.bridge.eventDispatcher sendEvent:event];
 }
 
 @end
